name: Publish Dbrew

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
#  build_wheels:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: ["3.9", "3.10"]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install tox
#      - name: Build wheels
#        run: |
#          tox -e build
#        env:
#          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run tests
        run: |
          tox
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Check formatting
        run: |
          tox -e format-check
      - name: Lint code
        run: |
          tox -e lint
#      - name: Type check
#        run: |
#          tox -e typecheck
      - name: Build source distribution
        run: |
          tox -e build

  publish:
    needs: [test, check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Publish package to PyPI
        run: |
          tox -e publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
